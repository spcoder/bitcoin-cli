// Code generated by MockGen. DO NOT EDIT.
// Source: http_manager.go

// Package main_test is a generated GoMock package.
package main_test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorequest "github.com/parnurzeal/gorequest"
)

// MockHttpRequester is a mock of HttpRequester interface
type MockHttpRequester struct {
	ctrl     *gomock.Controller
	recorder *MockHttpRequesterMockRecorder
}

// MockHttpRequesterMockRecorder is the mock recorder for MockHttpRequester
type MockHttpRequesterMockRecorder struct {
	mock *MockHttpRequester
}

// NewMockHttpRequester creates a new mock instance
func NewMockHttpRequester(ctrl *gomock.Controller) *MockHttpRequester {
	mock := &MockHttpRequester{ctrl: ctrl}
	mock.recorder = &MockHttpRequesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHttpRequester) EXPECT() *MockHttpRequesterMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockHttpRequester) Get() (gorequest.Response, string, []error) {
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(gorequest.Response)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].([]error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get
func (mr *MockHttpRequesterMockRecorder) Get() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockHttpRequester)(nil).Get))
}
